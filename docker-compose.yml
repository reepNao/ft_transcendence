version: '3.8'

services:
  frontend:
    container_name: frontend
    image: nginx
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "808:80"

  apigateway:
    container_name: apigateway
    build: ./apigateway
    depends_on:
      - authservice
      - mailservice
      - usermanagement
    volumes:
      - ./apigateway:/app
    ports:
      - "8000:8000"

  authservice:
    container_name: authservice
    build: ./authservice
    volumes:
      - ./authservice:/app

  mailservice:
    container_name: mailservice
    build: ./mailservice
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./mailservice:/app

  userpostgres:
    container_name: userpostgres
    image: postgres:13
    environment:
      POSTGRES_USER: yigit
      POSTGRES_PASSWORD: yigit
      POSTGRES_DB: usermanagement
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yigit -d usermanagement"]
      interval: 30s
      timeout: 10s
      retries: 5

  gamepostgres:
    container_name: gamepostgres
    image: postgres:13
    environment:
      POSTGRES_USER: yigit
      POSTGRES_PASSWORD: yigit
      POSTGRES_DB: gamepostgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yigit -d gamepostgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  friendspostgres:
    container_name: friendspostgres
    image: postgres:13
    environment:
      POSTGRES_USER: yigit
      POSTGRES_PASSWORD: yigit
      POSTGRES_DB: friendspostgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yigit -d friendspostgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  usermanagement:
    container_name: usermanagement
    build: ./usermanagement
    depends_on:
      userpostgres:
        condition: service_healthy
    volumes:
      - ./usermanagement:/app
    ports:
      - "8004:8004"

  gameservice:
    container_name: gameservice
    build: ./gameservice
    depends_on:
      gamepostgres:
        condition: service_healthy
    volumes:
      - ./gameservice:/app
    ports:
      - "8010:8010"

  coregameservice:
    container_name: coregameservice
    build: ./coregameservice
    volumes:
      - ./coregameservice:/app
    ports:
      - "8011:8011"

  statusserver:
    container_name: statusserver
    build: ./statusserver
    volumes:
      - ./statusserver:/app
    ports:
      - "8020:8020"

  friendservice:
    container_name: friendservice
    build: ./friends
    depends_on:
      friendspostgres:
        condition: service_healthy
    volumes:
      - ./friends:/app
    ports:
      - "8012:8012"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.17-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 30s
      timeout: 10s
      retries: 5
